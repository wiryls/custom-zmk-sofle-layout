#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    brightness_encoder: brightness_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB BRIGHTNESS";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    volume_encoder: volume_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "Audio Volume";
        #sensor-binding-cells = <0>;
        bindings = <&kp C_VOLUME_UP>, <&kp C_VOLUME_DOWN>;
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            bindings = <
&kp ESCAPE  &kp N1        &kp N2        &kp N3     &kp N4     &kp N5    &kp UP_ARROW     &kp N6  &kp N7     &kp N8            &kp N9     &kp N0             &kp BACKSPACE
&kp GRAVE   &kp Q         &kp W         &kp E      &kp R      &kp T     &kp DOWN_ARROW   &kp Y   &kp U      &kp I             &kp O      &kp P              &kp BSLH
&kp TAB     &kp A         &kp S         &kp D      &kp F      &kp G     &kp LEFT_ARROW   &kp H   &kp J      &kp K             &kp L      &kp SEMI           &kp SQT
&kp LSHFT   &kp Z         &kp X         &kp C      &kp V      &kp B     &kp RIGHT_ARROW  &kp N   &kp M      &kp EQUAL         &kp COMMA  &kp PERIOD         &kp SLASH
&kp C_MUTE  &kp LEFT_ALT  &kp LEFT_GUI  &kp LCTRL  &kp SPACE  &mo 1     &tog 1           &mo 2   &kp ENTER  &kp LEFT_BRACKET  &kp MINUS  &kp RIGHT_BRACKET
            >;

            sensor-bindings = <&volume_encoder>;
            display-name = "MAIN";
        };

        extend {
            bindings = <
&trans     &kp F1   &kp F2   &kp F3     &kp F4     &kp F5    &mmv MOVE_UP     &kp F6  &kp F7    &kp F8       &kp F9         &kp F10  &kp DELETE
&trans     &kp F11  &kp F12  &trans     &trans     &trans    &mmv MOVE_DOWN   &trans  &trans    &kp UP       &trans         &trans   &kp INSERT
&trans     &trans   &trans   &mkp LCLK  &mkp RCLK  &trans    &mmv MOVE_LEFT   &trans  &kp LEFT  &kp DOWN     &kp RIGHT      &trans   &trans
&trans     &trans   &trans   &trans     &trans     &trans    &mmv MOVE_RIGHT  &trans  &trans    &kp PAGE_UP  &trans         &trans   &trans
&mkp MCLK  &trans   &trans   &trans     &trans     &trans    &trans           &none   &trans    &kp HOME     &kp PAGE_DOWN  &kp END
            >;

            display-name = "EXT";
            sensor-bindings = <&scroll_encoder>;
        };

        settings {
            bindings = <
&out OUT_TOG     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_SPI    &trans  &trans  &trans  &trans  &bootloader  &soft_off
&trans           &trans        &trans        &trans        &trans        &trans          &rgb_ug RGB_SPD    &trans  &trans  &trans  &trans  &trans       &sys_reset
&trans           &trans        &trans        &trans        &trans        &trans          &rgb_ug RGB_EFR    &trans  &trans  &trans  &trans  &trans       &trans
&bt BT_CLR       &trans        &trans        &trans        &trans        &trans          &rgb_ug RGB_EFF    &trans  &trans  &trans  &trans  &trans       &trans
&rgb_ug RGB_TOG  &trans        &trans        &trans        &trans        &trans          &ext_power EP_OFF  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&brightness_encoder>;
        };
    };
};
